<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>layout on Gauliang</title>
    <link>https://gauliang.github.io/tags/layout/</link>
    <description>Recent content in layout on Gauliang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sat, 10 Oct 2020 17:03:29 +0800</lastBuildDate>
    
	<atom:link href="https://gauliang.github.io/tags/layout/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Block Formatting Context</title>
      <link>https://gauliang.github.io/blog/2020/block-formatting-context/</link>
      <pubDate>Sat, 10 Oct 2020 17:03:29 +0800</pubDate>
      
      <guid>https://gauliang.github.io/blog/2020/block-formatting-context/</guid>
      <description>了解 BFC 是什么，它具备什么布局特性，以及如何创建 BFC，有助于深入理解 CSS 布局的工作方式。
什么是 BFC 块格式化上下文(Block Formatting Context) 是一个独立的渲染区域，它指定内部 Block-level Box 的布局方式，并且与该区域的外部无关（无论内部元素如何排列，都不会影响外部元素）。
BFC 布局规则  在块格式设置上下文中的盒子从其顶部开始垂直地一个接一个地布局。 两个兄弟盒子之间的垂直距离由&amp;rsquo;margin&amp;rsquo;属性确定。块格式化上下文中相邻块级框之间的垂直边距将会叠加，最终结果由较大的外边距决定。 在块格式上下文中的所有盒子都是左对齐（用于从左到右格式）的，并且它们的左外边缘接触包含块的左边缘，即便存在浮动盒子也是如此，除非创建了新的跨格式化上下文。  Block Formatting Context  如上图中所看到的，属于块格式上下文的所有盒子都左对齐（对于LTR），并且它们的左外边缘接触包含块的左边缘。在最后一个框中，我们可以看到，即使左侧有一个浮动的元素（棕色），另一个元素（绿色）仍会触及包含块的左侧边距。
如何创建 BFC  Floats, absolutely positioned elements, block containers (such as inline-blocks, table-cells, and table-captions) that are not block boxes, and block boxes with &amp;lsquo;overflow&amp;rsquo; other than &amp;lsquo;visible&amp;rsquo; (except when that value has been propagated to the viewport) establish new block formatting contexts for their contents.</description>
    </item>
    
  </channel>
</rss>