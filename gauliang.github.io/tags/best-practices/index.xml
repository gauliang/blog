<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>best-practices on Gauliang</title>
    <link>https://gauliang.github.io/tags/best-practices/</link>
    <description>Recent content in best-practices on Gauliang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sat, 05 Sep 2020 10:51:40 +0800</lastBuildDate>
    
	<atom:link href="https://gauliang.github.io/tags/best-practices/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Javascript 箭头函数最佳实践[译]</title>
      <link>https://gauliang.github.io/blog/2020/javascript-arrow-function-best-practices/</link>
      <pubDate>Sat, 05 Sep 2020 10:51:40 +0800</pubDate>
      
      <guid>https://gauliang.github.io/blog/2020/javascript-arrow-function-best-practices/</guid>
      <description>Javascript 箭头函数最佳实践   英文原文： 5 Best Practices to Write Quality Arrow Functions
 箭头函数的语法简洁明了，非常适合作为回调使用，这里介绍 5 个有关箭头函数的最佳实践。
一、箭头函数名称推断 JS 中的箭头函数 name 值是一个空字符串，在调试会话或调用堆栈分析期间箭头函数被标记为 anonymous（匿名函数）。 通过函数名称推断（ES2015 的功能）可以在某些条件下检测到函数名称。
1  ( number =&amp;gt; number + 1 ).name; // =&amp;gt; &amp;#39;&amp;#39;   名称推断的思想是 JavaScript 可以从其语法位置确定箭头函数名称：例如，从保存函数对象的变量名称确定。
1 2  const increaseNumber = number =&amp;gt; number + 1; increaseNumber.name; // =&amp;gt; &amp;#39;increaseNumber&amp;#39;   建议： 使用函数名称推断来命名箭头函数。
二、尽可能内联 内联函数是仅具有一个表达式的函数。当箭头函数具有一个表达式时，可以轻松删除花括号 { } 和 return 语句：
1 2 3 4 5 6 7 8 9  const array = [1, 2, 3]; // 建议 array.</description>
    </item>
    
  </channel>
</rss>