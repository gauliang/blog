<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>krakend on Gauliang</title>
    <link>https://gauliang.github.io/tags/krakend/</link>
    <description>Recent content in krakend on Gauliang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sat, 11 Jan 2020 15:28:13 +0800</lastBuildDate>
    
	<atom:link href="https://gauliang.github.io/tags/krakend/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>微服务 API 网关 KrakenD</title>
      <link>https://gauliang.github.io/blog/2020/microservice-api-gateway-krakend/</link>
      <pubDate>Sat, 11 Jan 2020 15:28:13 +0800</pubDate>
      
      <guid>https://gauliang.github.io/blog/2020/microservice-api-gateway-krakend/</guid>
      <description>KrakenD 是用 Go 编写的开源高性能无状态、分布式、微服务 API 网关，其不仅可以轻松将客户端请求转发到后端服务，还具备强大的数据处理功能，支持转换、过滤、聚合和修剪来自后端服务甚至第三方服务的返回数据，从而消除处理多个 REST 服务的必要性，使客户端与微服务的实现细节隔离开来。这一切通过简单的配置即可实现，本文介绍 KrakendD 如何安装部署并快速投入应用。
KrakenD 概述 KrakenD 在具备超高性能的基础上还提供丰富的功能，简要梳理：
 API 数据聚合，将来自多个 API 的数据聚合到一起。 API 数据过滤，仅公开真正需要的数据。 强大的配置模板，且支持多种配置格式，但建议使用 JSON 配置，可以实现更加灵活的网关配置。 无状态、无数据库，在 KrakenD 群集中，所有节点都是自治的，即使关闭了所有其他节点，其仍可继续运行。 支持在几乎所有环境中运行，无论是虚拟机或容器云环境。 支持插件扩展，您可以使用 Go 或 Lua 脚本扩展 KrakenD 功能和业务逻辑。 接口安全，支持速率限制、OAuth、SSL、XSS防护等多种安全策略，且均为开箱即用。 机器人探测器  更多功能特性请参考官网文档 krakenD
基于 Kubernetes 部署高可用 KrakenD 集群 KrakenD 是一个独立的二进制文件，可直接运行，不需要任何外部库工作。本节介绍在 Kubernetes 环境安装 KrakenD 的大致步骤。
配置文件 KrakenD 服务器启动和操作所需的所有配置都在配置文件中定义，可以通过可视化工具 KrakenDesigner 生成，可用的常用配置文件格式有 .json，.toml 和 .yaml。配置文件写好后，可以通过 krakend check 进行语法检查。
1、语法检查
1 2  $ krakend check --config .</description>
    </item>
    
  </channel>
</rss>