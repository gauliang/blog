<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kubernetes on Gauliang</title>
    <link>https://gauliang.github.io/tags/kubernetes/</link>
    <description>Recent content in kubernetes on Gauliang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 09 Aug 2020 11:13:31 +0800</lastBuildDate>
    
	<atom:link href="https://gauliang.github.io/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>安装和配置 kubectl &amp; istioctl</title>
      <link>https://gauliang.github.io/blog/2020/kubectl-and-istio/</link>
      <pubDate>Sun, 09 Aug 2020 11:13:31 +0800</pubDate>
      
      <guid>https://gauliang.github.io/blog/2020/kubectl-and-istio/</guid>
      <description>一、Kubectl kubectl 是 Kubernetes 的命令行工具，通过它可以对 Kubernetes 集群执行指定的命令。 通过 kubectl 你可以部署应用，检查和管理集群资源并查看日志等。
1. 安装 kubectl Linux ubuntu 系统
1 2 3  sudo apt install kubectl # 测试 kubectl version --client   Macos 系统
1 2 3  brew install kubectl # 测试 kubectl version --client   2. 配置 kubectl 自动补全 kubectl 为 bash 和 zsh 提供自动补全能力。kubectl completion bash 命令可生成 Bash 的自动补全脚本，该脚本基于 bash-completion，需要线安装该软件。
Linux 系统
1 2 3 4  # 该命令会创建 `/usr/share/bash-completion/bash_completion` sudo apt install bash-completion # 启用kubectl自动补全 echo &amp;#39;source &amp;lt;(kubectl completion bash)&amp;#39; &amp;gt;&amp;gt;~/.</description>
    </item>
    
    <item>
      <title>使用 kubeadm 安装单控制平面 Kubernetes 集群</title>
      <link>https://gauliang.github.io/blog/2020/creating-single-control-plane-cluster-with-kubeadm/</link>
      <pubDate>Sun, 19 Jan 2020 20:30:54 +0800</pubDate>
      
      <guid>https://gauliang.github.io/blog/2020/creating-single-control-plane-cluster-with-kubeadm/</guid>
      <description>部署单控制平面 k8s 集群，并安装 Dashboard 和 ingress-nginx 使外部浏览器可以访问集群。  一、拓扑结构 本文主要介绍如何使用 kubeadm 安装部署单控制平面 Kubernetes v1.17.0 集群，所谓单控制平面，顾名思义就是由一个 Control-plane Node 和多个 Work Node 组成的 Kubernetes 集群。高可用集群与此不同，其由多个 Control-plane Node 和多个 Work Node 组成，高可用集群部署中，根据 etcd 数据库部署位置的不同，又分为栈内 etcd 数据库部署和外部独立 etcd 数据库集群部署两种模式。 下面展示了不同部署模式的拓扑结构：
单控制平面拓扑结构  高可用拓扑结构（栈内 etcd 数据库）  高可用拓扑结构（外部独立 etcd 数据库集群）  高可用部署与单控制平面部署不同，不过，除负载均衡及多 kube-apiserver 部分外，其他流程大同小异。有关高可用安装的更多信息请参考 Creating Highly Available clusters with kubeadm。
二、准备工作 硬件要求，建议 4 核以上 CPU，8GB 以上内存，Ubuntu 16.04 以上或 CentOS 7 以上版本的操作系统，确保所有服务器间网络通信正常，1 台服务器作为控制平面节点，其余若干台服务器作为工作节点，我这里准备了4个工作节点。基本信息如下：
   名称 CPU 内存 IP OS 安装 用途     CPN-1 4U 8GB 10.</description>
    </item>
    
  </channel>
</rss>